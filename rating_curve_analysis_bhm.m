% Data from Cheng et al 2011.% Read the dataX_dat = [1 0.95 0.3 0.020 0.586 26.82 1.20 0.3 0.023 0.586 26.83 1.38 0.3 0.025 0.586 26.84 1.55 0.3 0.027 0.586 26.85 1.77 0.3 0.030 0.586 26.86 2.07 0.3 0.033 0.586 26.87 2.35 0.3 0.035 0.586 26.88 2.55 0.3 0.037 0.586 26.89 2.91 0.3 0.040 0.586 26.810 3.42 0.3 0.045 0.586 26.811 4.09 0.3 0.050 0.586 26.812 5.44 0.3 0.060 0.586 26.813 6.73 0.3 0.070 0.586 26.814 8.23 0.3 0.080 0.586 26.815 9.58 0.3 0.090 0.586 26.816 11.09 0.3 0.100 0.586 26.817 13.05 0.3 0.110 0.586 26.818 14.48 0.3 0.120 0.586 26.819 16.28 0.3 0.130 0.586 26.820 17.70 0.3 0.140 0.586 26.821 19.80 0.3 0.150 0.586 26.8];Q = X_dat(:,2)/1000;Bvec = X_dat(:,3);h = X_dat(:,4);Svec = X_dat(:,5)/1000;temperature = X_dat(:,6);B = Bvec(1);S = Svec(1);A = B*h;P = B + 2*h;R = A./P;y1 = log(Q) - (2/3)*log(R) - log(A) - 0.5*log(S)figure(1), plot(h,y1,'k*')% Additional dataX_dat2 = [22 2.64 0.3 0.030 1.141 26.523 3.10 0.3 0.033 1.141 26.524 3.38 0.3 0.035 1.141 26.525 3.77 0.3 0.037 1.141 26.526 4.24 0.3 0.040 1.141 26.527 5.04 0.3 0.045 1.141 26.528 5.93 0.3 0.050 1.141 26.529 6.86 0.3 0.055 1.141 26.530 7.87 0.3 0.060 1.141 26.531 8.68 0.3 0.065 1.141 26.532 9.64 0.3 0.070 1.141 26.533 10.87 0.3 0.075 1.141 26.534 11.76 0.3 0.080 1.141 26.535 13.02 0.3 0.085 1.141 26.536 14.23 0.3 0.090 1.141 26.537 15.29 0.3 0.095 1.141 26.538 16.26 0.3 0.100 1.141 26.539 17.57 0.3 0.105 1.141 26.540 18.60 0.3 0.110 1.141 26.541 19.73 0.3 0.115 1.141 26.542 21.30 0.3 0.120 1.141 26.843 22.35 0.3 0.126 1.141 26.8];Q = X_dat2(:,2)/1000;Bvec = X_dat2(:,3);h = X_dat2(:,4);Svec = X_dat2(:,5)/1000;temperature = X_dat2(:,6);B = Bvec(1);S = Svec(1);A = B*h;P = B + 2*h;R = A./P;y2 = log(Q) - (2/3)*log(R) - log(A) - 0.5*log(S)figure(2), plot(h,y2,'k*')% Additional dataX_dat3 = [88 11.11 0.6 0.055 0.669 28.589 11.94 0.6 0.057 0.669 28.590 13.06 0.6 0.060 0.669 29.291 15.00 0.6 0.066 0.669 29.292 16.94 0.6 0.072 0.669 26.893 19.44 0.6 0.078 0.669 26.894 22.22 0.6 0.085 0.669 26.895 25.14 0.6 0.093 0.669 26.896 27.92 0.6 0.100 0.669 26.897 31.39 0.6 0.108 0.669 26.898 34.44 0.6 0.113 0.669 28.099 36.81 0.6 0.118 0.669 28.0100 42.50 0.6 0.131 0.669 28.0101 46.25 0.6 0.139 0.669 29.5102 49.58 0.6 0.146 0.669 29.5103 54.03 0.6 0.153 0.669 29.5104 56.67 0.6 0.160 0.669 29.5105 61.94 0.6 0.170 0.669 29.5106 68.75 0.6 0.183 0.669 29.5107 80.28 0.6 0.204 0.669 29.5108 95.28 0.6 0.232 0.669 30.8109 122.08 0.6 0.277 0.669 30.8];Q = X_dat3(:,2)/1000;Bvec = X_dat3(:,3);h = X_dat3(:,4);Svec = X_dat3(:,5)/1000;temperature = X_dat3(:,6);B = Bvec(1);S = Svec(1);A = B*h;P = B + 2*h;R = A./P;y3 = log(Q) - (2/3)*log(R) - log(A) - 0.5*log(S)figure(3), plot(h,y3,'k*')% Additional dataX_dat4 = [122 0.19 0.075 0.020 0.6 26.4123 0.28 0.075 0.025 0.6 26.4124 0.36 0.075 0.030 0.6 26.4125 0.46 0.075 0.035 0.6 26.4126 0.49 0.075 0.040 0.6 26.4127 0.68 0.075 0.050 0.6 26.0128 0.80 0.075 0.055 0.6 26.0129 0.90 0.075 0.060 0.6 26.0130 1.04 0.075 0.070 0.6 25.4];Q = X_dat4(:,2)/1000;Bvec = X_dat4(:,3);h = X_dat4(:,4);Svec = X_dat4(:,5)/1000;temperature = X_dat4(:,6);B = Bvec(1);S = Svec(1);A = B*h;P = B + 2*h;R = A./P;y4 = log(Q) - (2/3)*log(R) - log(A) - 0.5*log(S)figure(4), plot(h,y4,'k*')% Additional dataX_dat5 = [44 22.11 0.3 0.110 1.484 26.3 45 20.53 0.3 0.105 1.484 26.0 46 18.83 0.3 0.100 1.484 26.0 47 17.54 0.3 0.095 1.484 26.3 48 16.39 0.3 0.090 1.484 26.3 49 15.13 0.3 0.085 1.484 26.3 50 13.89 0.3 0.080 1.484 26.3 51 13.24 0.3 0.078 1.484 26.3 52 12.62 0.3 0.075 1.484 26.3 53 11.97 0.3 0.072 1.484 26.3 54 11.31 0.3 0.070 1.484 26.3 55 10.74 0.3 0.067 1.484 26.3 56 10.15 0.3 0.065 1.484 26.3 57 9.59 0.3 0.062 1.484 26.3 58 9.10 0.3 0.060 1.484 26.3];Q = X_dat5(:,2)/1000;Bvec = X_dat5(:,3);h = X_dat5(:,4);Svec = X_dat5(:,5)/1000;temperature = X_dat5(:,6);B = Bvec(1);S = Svec(1);A = B*h;P = B + 2*h;R = A./P;y5 = log(Q) - (2/3)*log(R) - log(A) - 0.5*log(S)figure(5), plot(h,y5,'k*') % Additional dataX_dat6 = [65 2.53 0.3 0.030 1.049 27.466 2.86 0.3 0.032 1.049 27.467 3.30 0.3 0.035 1.049 27.468 3.55 0.3 0.037 1.049 27.469 3.94 0.3 0.040 1.049 27.470 4.87 0.3 0.045 1.049 27.471 5.72 0.3 0.050 1.049 27.472 6.54 0.3 0.055 1.049 27.473 7.40 0.3 0.060 1.049 27.474 8.23 0.3 0.065 1.049 26.675 9.44 0.3 0.070 1.049 26.676 10.31 0.3 0.075 1.049 26.677 11.30 0.3 0.080 1.049 26.678 12.35 0.3 0.085 1.049 26.679 13.41 0.3 0.090 1.049 26.680 14.48 0.3 0.095 1.049 26.681 15.54 0.3 0.100 1.049 26.682 16.63 0.3 0.105 1.049 26.683 17.76 0.3 0.110 1.049 26.684 19.02 0.3 0.115 1.049 26.685 20.18 0.3 0.120 1.049 26.686 21.26 0.3 0.125 1.049 26.687 22.35 0.3 0.130 1.049 26.6];Q = X_dat6(:,2)/1000;Bvec = X_dat6(:,3);h = X_dat6(:,4);Svec = X_dat6(:,5)/1000;temperature = X_dat6(:,6);B = Bvec(1);S = Svec(1);A = B*h;P = B + 2*h;R = A./P;y6 = log(Q) - (2/3)*log(R) - log(A) - 0.5*log(S)figure(6), plot(h,y6,'k*')% Bayesian inferencen = length(y);ybar = mean(y);s = std(y);s2 = s*s;mu_0 = 4.565;tau2_0 = 0.215^2;mu_n = (mu_0/tau2_0 + n*ybar/s^2)/(1/tau2_0 + n/s^2); tau2_n = 1/(1/tau2_0 + n/s^2);sigmab = 0.215;mub = 4.565;sigmae = 0.014023;  % 0.0140;sigmau = 0.040991;  % 0.0411;phi = 0.08;nugget = 10^(-8);Sigma_e = sigmae^2*eye(n); X = ones(n,1);A = eye(n);Z = [X A];dist = zeros(n,n);for i = 1:n,    for j = 1:n        dist(i,j) = abs(h(i)-h(j));    endendR_u = zeros(n,n);R_u = (1 + sqrt(5)*dist/phi + 5*dist.^2/(3*phi^2)).*exp(-sqrt(5)*dist/phi)+eye(n)*nugget;Sigma_x = [sigmab^2,zeros(1,n);zeros(n,1),sigmau^2*R_u];mu_x = [mub zeros(1,n)]';Z = sparse([ones(n,1),sparse(eye(n))]);% Posterior meanx_post = mu_x + Sigma_x*Z'*((Z*Sigma_x*Z' + Sigma_e)\(y - Z*mu_x));% Posterior varianceSigma_post = Sigma_x - Sigma_x*Z'*((Z*Sigma_x*Z' + Sigma_e)\(Z*Sigma_x));% Estimates:mu_post = Z*x_post;% Standard deviation:std_post = sqrt(diag(Z*Sigma_post*Z'));% Prediction standard deviation:std_pred = sqrt(diag(Z*Sigma_post*Z')+sigmae^2*ones(n,1));% The fixed posterior mode and the sampling scheme for theta - scrpt startsRC.n = n;RC.y = y;RC.mu_x = [mub, zeros(1,n)]';RC.sigmab = sigmab;RC.lam_psi1 = 10;RC.lam_psi2 = 10;%sigmau = 0.03;%sigmae = 0.011;RC.phi = 0.08;RC.nugget = 10^(-8);%Sigma_e = sigmae^2*eye(n); RC.X = ones(n,1);RC.A = eye(n);RC.Z = sparse([X A]);RC.dist = zeros(n,n);for i = 1:n,    for j = 1:n        RC.dist(i,j) = abs(h(i)-h(j));    endendRC.R = zeros(n,n);RC.R = (1 + sqrt(5)*dist/phi + 5*dist.^2/(3*phi^2)).*exp(-sqrt(5)*dist/phi)+eye(n)*nugget;% Find the posterior meanDens = @(t)-DensEval_smooth(t,RC);startval = [log(0.014); log(0.041)];[t_m,~,~,~,~,H] = fminunc(Dens,startval);% Sample from the posterior distributionburnper=5000;Nit=burnper+50000;LH = chol(H)'/(2.38/sqrt(2));accept=0;t1 = zeros(2,Nit);t2 = zeros(2,Nit);t3 = zeros(2,Nit);t4 = zeros(2,Nit);xsiz = n + 1;x1 = zeros(xsiz,Nit);x2 = zeros(xsiz,Nit);x3 = zeros(xsiz,Nit);x4 = zeros(xsiz,Nit);ticfor j = 1:4    [1 j]    t_old = t_m;    t = zeros(2,Nit);    x = zeros(xsiz,Nit);    yp = zeros(RC.n,Nit);    ypo = zeros(RC.n,Nit);       [p_old,x_old,yp_old,ypo_old] = DensEval_smooth(t_old,RC);    for i = 1:Nit               t_new = t_old+(LH'\normrnd(0,1,[2,1]));        [p_new,x_new,yp_new,ypo_new] = DensEval_smooth(t_new,RC);        logR = p_new - p_old;        if logR > log(rand(1))            t_old = t_new;            x_old = x_new;            p_old = p_new;            yp_old = yp_new;            ypo_old = ypo_new;                 end        t(:,i) = t_old;        yp(:,i) = yp_old;        ypo(:,i) = ypo_old;        x(:,i) = x_old;    end        switch j            case 1                t1 = t;                yp1 = yp;                ypo1 = ypo;                x1 = x;              case 2                t2 = t;                yp2 = yp;                ypo2 = ypo;                             x2 = x;                           case 3                t3 = t;                yp3 = yp;                ypo3 = ypo;                               x3 = x;                           case 4                t4 = t;                ypo4 = ypo;                yp4 = yp;                x4 = x;             endendtoc% Next steps:% Plot Figure 1: posterior intervals for: eta + u(h)  with fixed theta% based on posterior mode and with sampled theta (wider intervals). % Plot Figure 2: Prediction intervals for y: eta + u(h) + e(h_i)  with fixed theta% based on posterior mode and with sampled theta (wider intervals).% Compute the marginal posterior density of sigma_e and sigma_u% Compute the marginal posterior 95% posterior intervals of sigma_e and% sigma_u plus their median.% Parameter 1:se = [exp(t1(1,burnper:Nit)) exp(t2(1,burnper:Nit)) exp(t3(1,burnper:Nit)) exp(t4(1,burnper:Nit))];xi1 = 0.0080:0.0001:0.0337;fse = ksdensity(se,xi1,'support', 'positive');xi1b = 0.0:0.01:0.04;fexp1 = RC.lam_psi1*exp(-RC.lam_psi1*xi1b);figure(1)hold offplot(xi1,fse,'k-'), hold on,plot(xi1b,fexp1,'k--')xlabel('$\sigma_\epsilon$','interpreter','Latex','fontsize',17)ylabel('$\pi(\sigma_\epsilon|y)$','interpreter','Latex','fontsize',17)set(gca,'fontsize',13)axs=axisaxis([0 0.034 0 180])hold offbox on% Interval: prctile(se,[2.5 50 97.5]):  0.0105    0.0144    0.0216print(figure(1),'-deps','post_dens_se.eps')% Parameter 2:su = [exp(t1(2,burnper:Nit)) exp(t2(2,burnper:Nit)) exp(t3(2,burnper:Nit)) exp(t4(2,burnper:Nit))];xi2 = 0.0020:0.0001:0.2900;fsu = ksdensity(su,xi2,'support', 'positive');xi2b = 0.0:0.01:0.29;fexp2 = RC.lam_psi2*exp(-RC.lam_psi2*xi2b);figure(2)hold offplot(xi2,fsu,'k-'), hold on,plot(xi2b,fexp2,'k--'),xlabel('$\sigma_u$','interpreter','Latex','fontsize',17)ylabel('$\pi(\sigma_u|y)$','interpreter','Latex','fontsize',17)set(gca,'fontsize',13)axs=axisaxis([0 0.22 0 25])hold offbox on% Interval: prctile(su,[2.5 50 97.5]): 0.0142    0.0409    0.1234print(figure(2),'-deps','post_dens_su.eps')%%%% MCMC predictions:xall = [x1(:,burnper:Nit) x2(:,burnper:Nit) x3(:,burnper:Nit) x4(:,burnper:Nit)];ypall = [yp1(:,burnper:Nit) yp2(:,burnper:Nit) yp3(:,burnper:Nit) yp4(:,burnper:Nit)];ypoall = [ypo1(:,burnper:Nit) ypo2(:,burnper:Nit) ypo3(:,burnper:Nit) ypo4(:,burnper:Nit)];xconf = zeros(n,3);yconf = zeros(n,3);ypred = zeros(n,3);for i = 1:n    xconf(i,:) = prctile(xall(i,:),[2.5 50 97.5]);    yconf(i,:) = prctile(ypall(i,:),[2.5 50 97.5]);    ypred(i,:) = prctile(ypoall(i,:),[2.5 50 97.5]);   end% Plot the observations y versus h plus estimates of mu = eta + u and% posterior std.figure(3)clf, plot(h,y,'k.'), holdplot([0 0.16],[xconf(1,2) xconf(1,2)],'k-')plot(h,mu_post + 1.96*std_post,'k:')plot(h,mu_post - 1.96*std_post,'k:')plot(h,yconf(:,2),'k-')plot(h,yconf(:,1),'k--')plot(h,yconf(:,3),'k--'), holdxlabel('$h$ (m)','interpreter','Latex','fontsize',17)ylabel('$y$','interpreter','Latex','fontsize',17)set(gca,'fontsize',13)axs=axisaxis([0 0.16 4.54 4.66])hold offbox onprint(figure(3),'-deps','postmean.eps')% Plot the observations y versus h plus estimates of mu = eta + u and% posterior std.figure(4)clf, plot(h,y,'k.'), holdplot([0 0.16],[xconf(1,2) xconf(1,2)],'k-')plot(h,mu_post + 1.96*std_pred,'k:')plot(h,mu_post - 1.96*std_pred,'k:')plot(h,ypred(:,2),'k-')plot(h,ypred(:,1),'k--')plot(h,ypred(:,3),'k--'), holdxlabel('$h$ (m)','interpreter','Latex','fontsize',17)ylabel('$y$','interpreter','Latex','fontsize',17)set(gca,'fontsize',13)axs=axisaxis([0 0.16 4.54 4.66])hold offbox onprint(figure(4),'-deps','prediction.eps')% Plot the observations y versus h plus prediction interval for y figure(5)tf = s*tinv(0.975,n-1)*sqrt(1+1/n);clf, plot(h,y,'k.'), holdplot([0 0.16],[ybar ybar],'k-')plot([0 0.16],[(ybar - tf) (ybar - tf)],'k--')plot([0 0.16],[(ybar + tf) (ybar + tf)],'k--'), holdxlabel('$h$ (m)','interpreter','Latex','fontsize',17)ylabel('$y$','interpreter','Latex','fontsize',17)set(gca,'fontsize',13)axs=axisaxis([0 0.16 4.54 4.66])hold offbox onprint(figure(5),'-deps','simpleprediction.eps')% Plot the observations y versus h plus prediction interval for y figure(6)clf, plot(h,Q,'k.')xlabel('$h$ (m)','interpreter','Latex','fontsize',17)ylabel('$Q$ (m$^3$/s)','interpreter','Latex','fontsize',17)set(gca,'fontsize',13)axs=axisaxis([0 0.16 0 0.02])hold offbox onprint(figure(6),'-deps','qvsh_data.eps')